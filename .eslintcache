[{"/Users/mirzoulugbek/Desktop/ReaactMeals/src/index.js":"1","/Users/mirzoulugbek/Desktop/ReaactMeals/src/App.js":"2","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/auth-context.js":"3","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/CardProvider.js":"4","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/cart-context.js":"5","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/Meals.js":"6","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Signup/SignUp.js":"7","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Login/Login.js":"8","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Cart/Cart.js":"9","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealsSummary/MealsSummary.js":"10","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/AvailableMeals/AvailableMeals.js":"11","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Button/Button.js":"12","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartItem/CartItem.js":"13","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Checkout/Checkout.js":"14","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Modal/Modal.js":"15","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartIcon.js":"16","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Card/Card.js":"17","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItem.js":"18","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItemForm/MealItemForm.js":"19","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Input/Item-Input.js":"20","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Proflie.js":"21","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/ForgotPassword.js":"22","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Header/Header.js":"23","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/HeaderCart/HeaderCartButton.js":"24"},{"size":483,"mtime":1620208360000,"results":"25","hashOfConfig":"26"},{"size":1467,"mtime":1620371019953,"results":"27","hashOfConfig":"26"},{"size":1287,"mtime":1620372420925,"results":"28","hashOfConfig":"26"},{"size":2720,"mtime":1620208360000,"results":"29","hashOfConfig":"26"},{"size":217,"mtime":1620208360000,"results":"30","hashOfConfig":"26"},{"size":555,"mtime":1620368576138,"results":"31","hashOfConfig":"26"},{"size":5942,"mtime":1620370015053,"results":"32","hashOfConfig":"26"},{"size":4587,"mtime":1620372423398,"results":"33","hashOfConfig":"26"},{"size":3194,"mtime":1620293697071,"results":"34","hashOfConfig":"26"},{"size":528,"mtime":1620208360000,"results":"35","hashOfConfig":"26"},{"size":2330,"mtime":1622429136564,"results":"36","hashOfConfig":"26"},{"size":353,"mtime":1620208360000,"results":"37","hashOfConfig":"26"},{"size":633,"mtime":1620208360000,"results":"38","hashOfConfig":"26"},{"size":3673,"mtime":1620208360000,"results":"39","hashOfConfig":"26"},{"size":740,"mtime":1620208360000,"results":"40","hashOfConfig":"26"},{"size":511,"mtime":1620208360000,"results":"41","hashOfConfig":"26"},{"size":217,"mtime":1620208360000,"results":"42","hashOfConfig":"26"},{"size":1148,"mtime":1622429176681,"results":"43","hashOfConfig":"26"},{"size":1419,"mtime":1620356425626,"results":"44","hashOfConfig":"26"},{"size":335,"mtime":1620208360000,"results":"45","hashOfConfig":"26"},{"size":1487,"mtime":1620355116111,"results":"46","hashOfConfig":"26"},{"size":189,"mtime":1620276714502,"results":"47","hashOfConfig":"26"},{"size":2126,"mtime":1620376107664,"results":"48","hashOfConfig":"26"},{"size":1274,"mtime":1620208360000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"13uav9d",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/mirzoulugbek/Desktop/ReaactMeals/src/index.js",[],["106","107"],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/App.js",["108"],"import React, { useContext, useState, useEffect } from 'react'\nimport Cart from './components/Carts/Cart/Cart'\nimport AuthContext from './store/auth-context';\nimport Header from \"./components/Layout/Header/Header\";\nimport Meals from './components/Meals/Meals';\nimport SignUp from './components/Signup/SignUp';\nimport Login from './components/Login/Login'\nimport Profile from './components/Proflie'\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport ForgotPassword from './components/ForgotPassword';\n\nfunction App() {\n\n  const [cartIsShown, setCartIsShown] = useState(false)\n  const loginCtx = useContext(AuthContext)\n  const showCartHandler = () => {\n    setCartIsShown(true)\n  }\n\n  const hideCartHandleer = () => {\n    setCartIsShown(false)\n  }\n\n  return (\n    <React.Fragment>\n      {cartIsShown && <Cart onClose={hideCartHandleer} />}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Switch>\n          <Route path='/' exact component={Meals} />\n          {!loginCtx.token && <Route path='/login' exact component={Login} />}\n          {!loginCtx.isLoggedIn && <Route path='/signup' exact component={SignUp} />}\n          {loginCtx.token && <Route path='/profile' exact component={Profile} />}\n          <Route path='/forgotPassword' exact component={ForgotPassword} />\n          <Route path='*'>\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/auth-context.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/CardProvider.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/cart-context.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/Meals.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Signup/SignUp.js",["109","110"],"import React, { useRef, useState, useContext } from 'react';\nimport { Avatar,CircularProgress, CssBaseline, TextField, Grid, Typography, makeStyles, Container } from '@material-ui/core';\nimport Button from '../Layout/Button/Button';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Link, useHistory } from 'react-router-dom'\nimport Modal from '../UI/Modal/Modal'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"/\">\n        React Meals\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(30),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '10px',\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.25)',\n    padding: '20px'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#8a2b06',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(4, 0, 3),\n    width: '100%'\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  const firstNameInputRef = useRef()\n  const lastNameInputRef = useRef()\n  const emailInputRef = useRef()\n  const passwordInputRef = useRef()\n  const telNumberInputRef = useRef()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const history = useHistory()\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n\n    const enteredEmail = emailInputRef.current.value\n    const enteredPassword = passwordInputRef.current.value\n    const enteredFirstName = firstNameInputRef.current.value\n    const enteredLastName = lastNameInputRef.current.value\n    const enteredTelNumber = telNumberInputRef.current.value\n\n    setIsLoading(true)\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDOrGEVcJp7D4lrsrsgv8Y7Ap2wbniHwzw'\n    fetch(\n      url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then(res => {\n      setIsLoading(false)\n      if (res.ok) {\n        return res.json()\n      }\n      else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed'\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message\n          }\n          throw new Error(errorMessage)\n        })\n      }\n    }).then(data => {\n      history.goBack()\n      //saving user sign up data into the firebase\n      fetch(\n        'https://food-order-38f3a-default-rtdb.firebaseio.com/users.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            email: data.email,\n            firstName: enteredFirstName,\n            lastName: enteredLastName,\n            telNumber: enteredTelNumber,\n            token: data.idToken\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      )\n    }).catch(err => {\n      alert(err.message)\n    })\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n     {isLoading && (\n        <Modal >\n          <CircularProgress color=\"inherit\" />\n        </Modal>\n      )}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create Account\n        </Typography>\n        <form className={classes.form} onSubmit={submitHandler}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                inputRef={firstNameInputRef}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                inputRef={lastNameInputRef}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                inputRef={emailInputRef}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"telephone\"\n                label=\"Telephone\"\n                type=\"number\"\n                id=\"telephone\"\n                inputRef={telNumberInputRef}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                inputRef={passwordInputRef}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Login/Login.js",["111","112","113","114"],"import React, { useRef, useState, useContext } from 'react';\n\nimport {\n  CircularProgress, Avatar, CssBaseline, TextField, FormControlLabel, Checkbox,\n  Grid, Box, Typography, makeStyles, Container\n} from '@material-ui/core';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Button from '../Layout/Button/Button'\nimport AuthContext from '../../store/auth-context';\nimport Modal from '../UI/Modal/Modal'\nimport { Link, useHistory } from 'react-router-dom'\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"/\">\n        React Meals\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(30),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '10px',\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.25)',\n    padding: '20px',\n  },\n\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#8a2b06',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n\n  submit: {\n    margin: theme.spacing(4, 0, 4),\n    width: '100%'\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailInputRef = useRef()\n  const passwordInputRef = useRef()\n\n  const authCtx = useContext(AuthContext)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const history = useHistory()\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    const enteredEmail = emailInputRef.current.value\n    const enteredPassword = passwordInputRef.current.value\n    setIsLoading(true)\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDOrGEVcJp7D4lrsrsgv8Y7Ap2wbniHwzw'\n    fetch(\n      url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then(res => {\n      setIsLoading(false)\n      if (res.ok) {\n        return res.json()\n      }\n      else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed'\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message\n          }\n          throw new Error(errorMessage)\n        })\n      }\n    }).then(data => {\n      const expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000))\n      authCtx.login(data.idToken, expirationTime.toISOString())\n      history.replace('/')\n    }).catch(err => {\n      alert(err.message)\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {isLoading && (\n        <Modal >\n          <CircularProgress color=\"inherit\" />\n        </Modal>\n      )}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={submitHandler}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            inputRef={emailInputRef}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            inputRef={passwordInputRef}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" inputProps={{ \"aria-label\": \"primary checkbox\" }}\n            />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            className={classes.submit}\n          > Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link style={{ color: 'black' }} to=\"/forgotPassword\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Cart/Cart.js",["115"],"import React, { useContext, useState, useEffect } from 'react'\n\nimport Modal from '../../UI/Modal/Modal'\nimport CartContext from '../../../store/cart-context'\nimport CartItem from '../CartItem/CartItem'\nimport classes from './Cart.module.css'\nimport Checkout from '../Checkout/Checkout'\n\nfunction Cart(props) {\n    const cartCtx = useContext(CartContext)\n    const [isCheckout, setIsCheckout] = useState(false)\n\n    const totalAmount = `â©${cartCtx.totalAmount.toFixed(3)}`\n    const hasItems = cartCtx.items.length > 0\n\n    const [isSubmitting, setIsSubmitting] = useState(false)\n    const [didSubmit, setDidSubmit] = useState(false)\n\n    const cartItemRemoveHandler = id => {\n        cartCtx.removeItem(id)\n    }\n\n    const cartItemAddHandler = item => {\n        cartCtx.addItem({ ...item, amount: 1 })\n    }\n\n    const orderHandler = () => {\n        setIsCheckout(true)\n    }\n\n    //error handling shoulb be implemented\n    const submitOrderHandler = async (userData) => {\n        setIsSubmitting(true)\n        await fetch('https://food-order-38f3a-default-rtdb.firebaseio.com/orders.json', {\n            method: 'POST',\n            body: JSON.stringify({\n                user: userData,\n                oderedItems: cartCtx.items\n            })\n        })\n        setIsSubmitting(false)\n        setDidSubmit(true)\n        cartCtx.clearCart()\n    }\n\n    const cartItems =\n        <ul className={classes['cart-items']}>{cartCtx.items.map(\n            (item) =>\n                <CartItem\n                    key={item.id}\n                    name={item.name}\n                    amount={item.amount}\n                    price={item.price}\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                    onAdd={cartItemAddHandler.bind(null, item)}\n                />\n        )}</ul>\n\n    const modalActions = (\n        <div className={classes.actions}>\n            <button onClick={props.onClose} className={classes['button--alt']}>\n                Close\n            </button>\n            {hasItems && <button className={classes.button} onClick={orderHandler} >\n                Order\n            </button>}\n        </div>\n    )\n\n    const cartModalContent = (\n        <React.Fragment>\n            {cartItems}\n            <div className={classes.total}>\n                <span>Total: </span>\n                <span>{totalAmount}</span>\n            </div>\n            {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\n            {!isCheckout && modalActions}\n        </React.Fragment>\n    )\n\n    const isSubmittingModalContent = <p>Sending order data...</p>\n\n    const didSubmitModalContent = <React.Fragment>\n        <p>Successfully sent the order!</p>\n        <div className={classes.actions}>\n            <button onClick={props.onClose} className={classes.button}>\n                Close\n            </button>\n        </div>\n    </React.Fragment>\n\n    return (\n        <Modal onClose={props.onClose}>\n            {!isSubmitting && !didSubmit && cartModalContent}\n            {isSubmitting && isSubmittingModalContent}\n            {!isSubmitting && didSubmit && didSubmitModalContent}\n        </Modal>\n    )\n}\n\nexport default Cart\n","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealsSummary/MealsSummary.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/AvailableMeals/AvailableMeals.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Button/Button.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartItem/CartItem.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Checkout/Checkout.js",["116"],"import React, { useRef, useState } from 'react'\nimport classes from './Checkout.module.css';\n\nconst isEmpty = value => value.trim() === ''\nconst isFiveChars = value => value.trim().length == 5\n\nconst Checkout = (props) => {\n\n    const [formInputsValidity, setformInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    })\n\n    const nameInputRef = useRef()\n    const streetInputRef = useRef()\n    const postalCodeInputRef = useRef()\n    const cityInputRef = useRef()\n\n    const confirmHandler = (event) => {\n        event.preventDefault();\n\n        const enteredName = nameInputRef.current.value\n        const enteredStreet = streetInputRef.current.value\n        const enteredPostalCode = postalCodeInputRef.current.value\n        const enteredCity = cityInputRef.current.value\n\n        const enteredNameIsValid = !isEmpty(enteredName)\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\n        const enteredCityIsValid =  !isEmpty(enteredCity)\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\n\n        setformInputsValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            postalCode: enteredPostalCodeIsValid,\n            city: enteredCityIsValid\n        })\n\n        const formIsValid =\n            enteredNameIsValid &&\n            enteredStreetIsValid &&\n            enteredPostalCodeIsValid &&\n            enteredCityIsValid\n\n        if (!formIsValid) {\n            return\n        }\n\n\n        props.onConfirm({\n            name: enteredName,\n            street: enteredStreet,\n            postalCode: enteredPostalCode,\n            city: enteredCity\n        })\n    };\n\n    const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid\n        }`\n    const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid\n        }`\n    const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid\n        }`\n    const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid\n        }`\n\n    return (\n        <form className={classes.form} onSubmit={confirmHandler}>\n            <div className={nameControlClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input ref={nameInputRef} type='text' id='name' />\n                {!formInputsValidity.name && <p>Please enter valid name!</p>}\n            </div>\n            <div className={streetControlClasses}>\n                <label htmlFor='street'>Street</label>\n                <input ref={streetInputRef} type='text' id='street' />\n                {!formInputsValidity.street && <p>Please enter valid street!</p>}\n            </div>\n            <div className={postalCodeControlClasses}>\n                <label htmlFor='postal'>Postal Code</label>\n                <input ref={postalCodeInputRef} type='number' id='postal' />\n                {!formInputsValidity.postalCode && <p>Please enter valid postal code (5)!</p>}\n            </div>\n            <div className={cityControlClasses}>\n                <label htmlFor='city'>City</label>\n                <input ref={cityInputRef} type='text' id='city' />\n                {!formInputsValidity.city && <p>Please enter valid city!</p>}\n            </div>\n            <div className={classes.actions}>\n                <button type='button' onClick={props.onCancel}>\n                    Cancel\n                </button>\n                <button className={classes.submit}>Confirm</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Checkout;","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Modal/Modal.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartIcon.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Card/Card.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItem.js",["117","118"],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItemForm/MealItemForm.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Input/Item-Input.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Proflie.js",["119"],"import React, { useContext, useEffect } from 'react'\nimport AuthContext from '../store/auth-context'\n\nfunction Proflie() {\n    const loginCtx = useContext(AuthContext)\n\n    useEffect(() => {\n        const fetchUserInfo = async () => {\n            if (loginCtx.isLoggedIn) {\n                const response = await fetch('https://food-order-38f3a-default-rtdb.firebaseio.com/users.json')\n                if (!response.ok) {\n                    throw new Error(\"Something went wrong!\")\n                }\n                const responseData = await response.json()\n\n                for(const user in responseData) {\n                    if(responseData[user].token === loginCtx.token){\n                        console.log(user)\n                    }\n                }\n            }\n\n            // const loadedMeals = []\n            // for (const key in responseData) {\n            //     loadedMeals.push({\n            //         id: key,\n            //         name: responseData[key].name,\n            //         description: responseData[key].description,\n            //         price: responseData[key].price\n            //     })\n            // }\n            // setMeals(loadedMeals)\n            // setIsLoading(false)\n        }\n\n        fetchUserInfo().catch(error => {\n            // setIsLoading(false)\n            // setHttpError(error.message)\n        })\n    }, [])\n\n\n    return (\n        <div>\n            <h1>Hello it is Proflie</h1>\n        </div>\n    )\n}\n\nexport default Proflie","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/ForgotPassword.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Header/Header.js",["120","121","122"],"import React, { useContext } from \"react\";\nimport mealsImage from \"../../../assets/meals.jpg\";\nimport AuthContext from \"../../../store/auth-context\";\nimport HeaderCartButton from \"../HeaderCart/HeaderCartButton\";\nimport classes from \"./Header.module.css\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../Button/Button\";\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\n\nfunction Header(props) {\n  const loginCtx = useContext(AuthContext);\n\n  const logoutHandler = () => {\n    loginCtx.logout()\n  }\n\n  const loginHandler = () => {\n    loginCtx.login()\n  }\n\n  return (\n    <React.Fragment>\n      <header className={classes.header}>\n        <h1>Reactt Meals</h1>\n        <div className={classes.innerDiv}>\n         \n          {!loginCtx.isLoggedIn && (\n            <button className={classes.button} onClick={loginHandler}>\n              <Link to=\"/login\" style={{ color: \"white\" }}>\n                Login\n              </Link>\n            </button>\n          )}\n\n          {!loginCtx.isLoggedIn && (\n            <button className={classes.button}>\n              <Link to=\"/signup\" style={{ color: \"white\" }}>\n                Register\n              </Link>\n            </button>\n          )}\n\n          {loginCtx.isLoggedIn && (\n            <HeaderCartButton onClick={props.onShowCart} />\n          )}\n          <div style={{ display: 'flex', marginLeft: '100px' }}>\n            {loginCtx.isLoggedIn && (\n              <button className={classes.button} onClick={logoutHandler}>\n                <span className={classes.icon}>\n                  <ExitToAppRoundedIcon />\n                </span>\n                <Link to='/logout' style={{ color: 'white' }}></Link>\n              </button>\n            )}\n            {loginCtx.isLoggedIn && (\n              <button className={classes.button}>\n                <Link style={{ color: 'white' }} to='/profile'>Profile</Link>\n              </button>\n            )}\n          </div>\n\n        </div>\n      </header>\n    </React.Fragment>\n  );\n}\n\nexport default Header;\n","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/HeaderCart/HeaderCartButton.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":39,"nodeType":"129","messageId":"130","endLine":1,"endColumn":48},{"ruleId":"127","severity":1,"message":"131","line":1,"column":35,"nodeType":"129","messageId":"130","endLine":1,"endColumn":45},{"ruleId":"127","severity":1,"message":"132","line":8,"column":10,"nodeType":"129","messageId":"130","endLine":8,"endColumn":19},{"ruleId":"127","severity":1,"message":"133","line":4,"column":53,"nodeType":"129","messageId":"130","endLine":4,"endColumn":69},{"ruleId":"127","severity":1,"message":"134","line":4,"column":71,"nodeType":"129","messageId":"130","endLine":4,"endColumn":79},{"ruleId":"127","severity":1,"message":"135","line":5,"column":9,"nodeType":"129","messageId":"130","endLine":5,"endColumn":12},{"ruleId":"127","severity":1,"message":"132","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":1,"column":39,"nodeType":"129","messageId":"130","endLine":1,"endColumn":48},{"ruleId":"136","severity":1,"message":"137","line":5,"column":50,"nodeType":"138","messageId":"139","endLine":5,"endColumn":52},{"ruleId":"127","severity":1,"message":"140","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":24,"column":17,"nodeType":"143","endLine":24,"endColumn":68},{"ruleId":"144","severity":1,"message":"145","line":40,"column":8,"nodeType":"146","endLine":40,"endColumn":10,"suggestions":"147"},{"ruleId":"127","severity":1,"message":"148","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"149","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":14},{"ruleId":"127","severity":1,"message":"150","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":32},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Copyright' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loginCtx.isLoggedIn' and 'loginCtx.token'. Either include them or remove the dependency array.","ArrayExpression",["153"],"'mealsImage' is defined but never used.","'Button' is defined but never used.","'AccountCircleRoundedIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [loginCtx.isLoggedIn, loginCtx.token]",{"range":"156","text":"157"},[1367,1369],"[loginCtx.isLoggedIn, loginCtx.token]"]