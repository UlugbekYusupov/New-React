[{"/Users/mirzoulugbek/Desktop/ReaactMeals/src/index.js":"1","/Users/mirzoulugbek/Desktop/ReaactMeals/src/App.js":"2","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/auth-context.js":"3","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/CardProvider.js":"4","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/cart-context.js":"5","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/Meals.js":"6","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Signup/SignUp.js":"7","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Login/Login.js":"8","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Cart/Cart.js":"9","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Header/Header.js":"10","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealsSummary/MealsSummary.js":"11","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/AvailableMeals/AvailableMeals.js":"12","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Button/Button.js":"13","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartItem/CartItem.js":"14","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/HeaderCart/HeaderCartButton.js":"15","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Checkout/Checkout.js":"16","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Modal/Modal.js":"17","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartIcon.js":"18","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Card/Card.js":"19","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItem.js":"20","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItemForm/MealItemForm.js":"21","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Input/Item-Input.js":"22","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Proflie.js":"23","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/ForgotPassword.js":"24"},{"size":483,"mtime":1620208360000,"results":"25","hashOfConfig":"26"},{"size":1512,"mtime":1620281519246,"results":"27","hashOfConfig":"26"},{"size":907,"mtime":1620272124919,"results":"28","hashOfConfig":"26"},{"size":2720,"mtime":1620208360000,"results":"29","hashOfConfig":"26"},{"size":217,"mtime":1620208360000,"results":"30","hashOfConfig":"26"},{"size":314,"mtime":1620208360000,"results":"31","hashOfConfig":"26"},{"size":4191,"mtime":1620277271482,"results":"32","hashOfConfig":"26"},{"size":13681,"mtime":1620282402611,"results":"33","hashOfConfig":"26"},{"size":3250,"mtime":1620264885445,"results":"34","hashOfConfig":"26"},{"size":2134,"mtime":1620283918857,"results":"35","hashOfConfig":"26"},{"size":528,"mtime":1620208360000,"results":"36","hashOfConfig":"26"},{"size":1963,"mtime":1620208360000,"results":"37","hashOfConfig":"26"},{"size":353,"mtime":1620208360000,"results":"38","hashOfConfig":"26"},{"size":633,"mtime":1620208360000,"results":"39","hashOfConfig":"26"},{"size":1274,"mtime":1620208360000,"results":"40","hashOfConfig":"26"},{"size":3673,"mtime":1620208360000,"results":"41","hashOfConfig":"26"},{"size":740,"mtime":1620208360000,"results":"42","hashOfConfig":"26"},{"size":511,"mtime":1620208360000,"results":"43","hashOfConfig":"26"},{"size":217,"mtime":1620208360000,"results":"44","hashOfConfig":"26"},{"size":1093,"mtime":1620208360000,"results":"45","hashOfConfig":"26"},{"size":1273,"mtime":1620208360000,"results":"46","hashOfConfig":"26"},{"size":335,"mtime":1620208360000,"results":"47","hashOfConfig":"26"},{"size":162,"mtime":1620281573197,"results":"48","hashOfConfig":"26"},{"size":189,"mtime":1620276714502,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"13uav9d",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/mirzoulugbek/Desktop/ReaactMeals/src/index.js",[],["105","106"],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/App.js",["107"],"import React, { useContext, useState, useEffect } from 'react'\nimport Cart from './components/Carts/Cart/Cart'\nimport AuthContext from './store/auth-context';\nimport Header from \"./components/Layout/Header/Header\";\nimport Meals from './components/Meals/Meals';\nimport SignUp from './components/Signup/SignUp';\nimport Login from './components/Login/Login'\nimport Profile from './components/Proflie'\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport ForgotPassword from './components/ForgotPassword';\n\nfunction App() {\n\n  const [cartIsShown, setCartIsShown] = useState(false)\n  const loginCtx = useContext(AuthContext)\n  const showCartHandler = () => {\n    setCartIsShown(true)\n  }\n\n  const hideCartHandleer = () => {\n    setCartIsShown(false)\n  }\n\n  return (\n    <React.Fragment>\n      {cartIsShown && <Cart onClose={hideCartHandleer} />}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Switch>\n          \n          <Route path='/' exact component={Meals} />\n          \n          {!loginCtx.token && <Route path='/login' exact component={Login} />}\n          {!loginCtx.isLoggedIn && <Route path='/signup' exact component={SignUp} />}\n          {loginCtx.token && <Route path='/profile' exact component={Profile} />}\n          \n          <Route path='/forgotPassword' exact component={ForgotPassword} />\n          \n          <Route path='*'>\n            <Redirect to=\"/\" />\n          </Route>\n\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/auth-context.js",["108"],"import React, { useState, useEffect } from 'react'\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    login: (token) => { },\n    logout: () => { }\n})\n\nexport const AuthContextProvider = (props) => {\n    const initialToken = localStorage.getItem('token')\n    const [token, setToken] = useState(initialToken)\n    const userIsLoggedIn = !!token\n\n    const logoutHandler = () => {\n        setToken(null)\n        localStorage.removeItem('token')\n    }\n\n    const loginHandler = (token) => {\n        localStorage.setItem('token', token)\n        setToken(token)\n    }\n\n    const contextValue = {\n        token: token,\n        isLoggedIn: userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\nexport default AuthContext","/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/CardProvider.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/store/cart-context.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/Meals.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Signup/SignUp.js",["109","110","111","112"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '../Layout/Button/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        React Meals\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(20),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '10px',\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.25)',\n    padding: '20px'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#8a2b06',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 3),\n    width: '100%'\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"telephone\"\n                label=\"Telephone\"\n                type=\"number\"\n                id=\"telephone\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      {/* <Box mt={30}> */}\n      {/* <footer><Copyright /></footer> */}\n      {/* </Box> */}\n    </Container>\n  );\n}","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Login/Login.js",["113","114"],"// // import React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\n// // import Card from '../UI/Card/Card';\n// // import classes from './Login.module.css';\n// // import Button from './Button/Button';\n// // import AuthContext from '../../store/auth-context';\n// // import Input from './Input/Login-Input';\n\n// // const emaulReducer = (state, action) => {\n// //   if (action.type === 'USER_INPUT') {\n// //     return { value: action.val, isValid: action.val.includes('@') }\n// //   }\n// //   if (action.type === 'INPUT_BLUR') {\n// //     return { value: state.value, isValid: state.value.includes('@') }\n// //   }\n// //   return { value: '', isValid: false }\n// // }\n\n// // const passwordReducer = (state, action) => {\n// //   if (action.type === 'USER_INPUT') {\n// //     return { value: action.val, isValid: action.val.trim().length > 6 }\n// //   }\n// //   if (action.type === 'INPUT_BLUR') {\n// //     return { value: state.value, isValid: state.value.trim().length > 6 }\n// //   }\n// //   return { value: '', isValid: false }\n// // }\n\n// // const Login = (props) => {\n\n// //   const [formIsValid, setFormIsValid] = useState(false);\n// //   const [signUp, setSignUp] = useState(false)\n\n// //   const authCtx = useContext(AuthContext)\n\n// //   const [emailState, dispatchEmail] = useReducer(emaulReducer, {\n// //     value: '', isValid: null\n// //   })\n// //   const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n// //     value: '', isValid: null\n// //   })\n\n// //   const { isValid: emailIsValid } = emailState\n// //   const { isValid: passwordIsValid } = passwordState\n\n// //   const emailInputRef = useRef()\n// //   const passwordInputRef = useRef()\n\n// //   useEffect(() => {\n// //     const identifier = setTimeout(() => {\n// //       console.log(\"checking form validity\")\n// //       setFormIsValid(\n// //         emailIsValid && passwordIsValid\n// //       );\n// //     }, 500)\n// //     return function cleanup() {\n// //       console.log(\"Cleanup\")\n// //       clearTimeout(identifier)\n// //     }\n// //   }, [emailIsValid, passwordIsValid])\n\n// //   const emailChangeHandler = (event) => {\n// //     dispatchEmail({ type: 'USER_INPUT', val: event.target.value })\n// //   };\n\n// //   const passwordChangeHandler = (event) => {\n// //     dispatchPassword({ type: 'USER_INPUT', val: event.target.value })\n// //   };\n\n// //   const validateEmailHandler = () => {\n// //     dispatchEmail({ type: 'INPUT_BLUR' })\n// //   };\n\n// //   const validatePasswordHandler = () => {\n// //     dispatchPassword({ type: 'INPUT_BLUR' })\n// //   };\n\n// //   const submitHandler = (event) => {\n// //     event.preventDefault();\n// //     setSignUp(false)\n// //     if (formIsValid) {\n// //       authCtx.login(emailState.value, passwordState.value);\n// //     } else if (!emailIsValid) {\n// //       emailInputRef.current.focus()\n// //     } else {\n// //       passwordInputRef.current.focus()\n// //     }\n// //   };\n\n// //   const registerHandler = (event) => {\n// //     setSignUp(true)\n// //   }\n\n// //   return (\n// //     <Card className={classes.login}>\n// //       <form onSubmit={submitHandler}>\n// // <Input\n// // id=\"email\"\n// // label=\"E-Mail\"\n// // isValid={emailIsValid}\n// // value={emailState.value}\n// // onChange={emailChangeHandler}\n// // onBlur={validateEmailHandler}\n// // ref={emailInputRef}\n// // />\n// //         <Input\n// //           id=\"password\"\n// //           label=\"Password\"\n// //           isValid={passwordIsValid}\n// //           value={passwordState.value}\n// //           onChange={passwordChangeHandler}\n// //           onBlur={validatePasswordHandler}\n// //           ref={passwordInputRef}\n// //         />\n\n// //         {signUp && (\n// //           <React.Fragment>\n// //             <Input\n// //               id=\"username\"\n// //               label=\"Username\"\n// //             // isValid={passwordIsValid}\n// //             // value={passwordState.value}\n// //             // onChange={passwordChangeHandler}\n// //             // onBlur={validatePasswordHandler}\n// //             // ref={passwordInputRef}\n// //             />\n// //             <Input\n// //               id=\"address\"\n// //               label=\"Address\"\n// //             // isValid={passwordIsValid}\n// //             // value={passwordState.value}\n// //             // onChange={passwordChangeHandler}\n// //             // onBlur={validatePasswordHandler}\n// //             // ref={passwordInputRef}\n// //             />\n// //             <Input\n// //               type=\"number\"\n// //               id=\"tel\"\n// //               label=\"Telephone\"\n// //             // isValid={passwordIsValid}\n// //             // value={passwordState.value}\n// //             // onChange={passwordChangeHandler}\n// //             // onBlur={validatePasswordHandler}\n// //             // ref={passwordInputRef}\n// //             />\n// //           </React.Fragment>\n// //         )}\n\n// //         <div className={classes.actions}>\n// //           <Button type=\"submit\" className={classes.btn}>\n// //             Login\n// //           </Button>\n// //           <Button onClick={registerHandler} className={classes.btn}>\n// //             Register\n// //           </Button>\n// //         </div>\n// //       </form>\n// //     </Card>\n// //   );\n// // };\n\n// // export default Login;\n\n\n// import React, { useState, useRef, useContext } from 'react';\n// import AuthContext from '../../store/auth-context'\n// import Card from '../UI/Card/Card';\n// import Button from './Button/Button'\n// import Input from './Input/Login-Input';\n\n// import classes from './Login.module.css';\n\n// const Login = () => {\n\n//   const emailInputRef = useRef();\n//   const passwordInputRef = useRef();\n\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [isLoading, setIsLoading] = useState(false)\n\n//   const authCtx = useContext(AuthContext)\n//   const [isLogin, setIsLogin] = useState(true);\n\n//   const switchAuthModeHandler = () => {\n//     setIsLogin((prevState) => !prevState);\n//   };\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     const enteredEmail = emailInputRef.current.value\n//     const enteredPassword = passwordInputRef.current.value\n\n//     setIsLoading(true)\n//     let url\n//     if (isLogin) {\n//       url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDOrGEVcJp7D4lrsrsgv8Y7Ap2wbniHwzw'\n\n//     } else {\n//       url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDOrGEVcJp7D4lrsrsgv8Y7Ap2wbniHwzw'\n//     }\n\n//     fetch(\n//       url,\n//       {\n//         method: 'POST',\n//         body: JSON.stringify({\n//           email: enteredEmail,\n//           password: enteredPassword,\n//           returnSecureToken: true\n//         }),\n//         headers: {\n//           'Content-Type': 'application/json'\n//         }\n//       }\n//     ).then(res => {\n//       setIsLoading(false)\n//       if (res.ok) {\n//         return res.json()\n//       } else {\n//         return res.json().then(data => {\n//           let errorMessage = 'Authentication failed'\n//           if (data && data.error && data.error.message) {\n//             errorMessage = data.error.message\n//           }\n//           throw new Error(errorMessage)\n//         })\n//       }\n//     }).then(data => {\n//       authCtx.login(data.idToken)\n//     }).catch(err => {\n//       alert(err.message)\n//     })\n//   };\n\n//   return (\n//     <Card className={classes.login}>\n//       <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n//       <form onSubmit={submitHandler}>\n//         <Input\n//           type=\"email\"\n//           id=\"email\"\n//           label=\"E-Mail\"\n//           ref={emailInputRef}\n//         />\n\n//         <Input\n//           label=\"Password\"\n//           type='password'\n//           id='password'\n//           required\n//           ref={passwordInputRef}\n//         />\n\n//         {!isLogin && (\n//           <React.Fragment>\n//             <Input\n//               label=\"Username\"\n//               type='text'\n//               id='username'\n//             />\n//             <Input\n//               label=\"Telephone\"\n//               type='number'\n//               id='tel'\n//             />\n//             <Input\n//               label=\"Address\"\n//               type='text'\n//               id='address'\n//             />\n//           </React.Fragment>\n//         )}\n//         {isLoading && <p style={{ textAlign: \"center\", color: \"red\" }}>Sending request</p>}\n\n//         <div className={classes.actions}>\n//           {!isLoading && <Button type=\"submit\">{isLogin ? 'Login' : 'Create Account'}</Button>}\n//           <button\n//             type='button'\n//             className={classes.toggle}\n//             onClick={switchAuthModeHandler}\n//           >\n//             {isLogin ? 'Create new account' : 'Login with existing account'}\n//           </button>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useRef, useState, useContext } from 'react';\n\nimport {\n  CircularProgress, Avatar, CssBaseline, TextField, FormControlLabel, Checkbox,\n  Grid, Box, Typography, makeStyles, Container\n} from '@material-ui/core';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Button from '../Layout/Button/Button'\nimport AuthContext from '../../store/auth-context';\nimport Modal from '../UI/Modal/Modal'\nimport { Link } from 'react-router-dom'\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        React Meals\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(20),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRadius: '10px',\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.25)',\n    padding: '20px',\n  },\n  \n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#8a2b06',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n\n  submit: {\n    margin: theme.spacing(2, 0, 4),\n    width: '100%'\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const emailInputRef = useRef()\n  const passwordInputRef = useRef()\n\n  const authCtx = useContext(AuthContext)\n  const [isLoading, setIsLoading] = useState(false)\n\n  // } else {\n  //   url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDOrGEVcJp7D4lrsrsgv8Y7Ap2wbniHwzw'\n  // }\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    const enteredEmail = emailInputRef.current.value\n    const enteredPassword = passwordInputRef.current.value\n    setIsLoading(true)\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDOrGEVcJp7D4lrsrsgv8Y7Ap2wbniHwzw'\n    fetch(\n      url,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    ).then(res => {\n      setIsLoading(false)\n      if (res.ok) {\n        return res.json()\n      }\n      else {\n        return res.json().then(data => {\n          let errorMessage = 'Authentication failed'\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message\n          }\n          throw new Error(errorMessage)\n        })\n      }\n    }).then(data => {\n      authCtx.login(data.idToken)\n    }).catch(err => {\n      alert(err.message)\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      {isLoading && (\n        <Modal >\n          <CircularProgress color=\"inherit\" />\n        </Modal>\n      )}\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={submitHandler}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            inputRef={emailInputRef}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            inputRef={passwordInputRef}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"inherit\"\n            className={classes.submit}\n          > Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"/forgotPassword\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      {/* <Box mt={30}> */}\n      {/* <footer><Copyright /></footer> */}\n      {/* </Box> */}\n    </Container>\n  );\n}\n","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Cart/Cart.js",["115","116","117"],"import React, { useContext, useState, useEffect } from 'react'\n\nimport Modal from '../../UI/Modal/Modal'\nimport CartContext from '../../../store/cart-context'\nimport CartItem from '../CartItem/CartItem'\nimport classes from './Cart.module.css'\nimport Checkout from '../Checkout/Checkout'\n\nfunction Cart(props) {\n    const cartCtx = useContext(CartContext)\n    const [isCheckout, setIsCheckout] = useState(false)\n\n    const totalAmount = `₩${cartCtx.totalAmount.toFixed(3)}`\n    const hasItems = cartCtx.items.length > 0\n\n    const [isSubmitting, setIsSubmitting] = useState(false)\n    const [didSubmit, setDidSubmit] = useState(false)\n    const [isLoggedin, setIsLoggedin] = useState(false)\n\n    const cartItemRemoveHandler = id => {\n        cartCtx.removeItem(id)\n    }\n\n    const cartItemAddHandler = item => {\n        cartCtx.addItem({ ...item, amount: 1 })\n    }\n\n    const orderHandler = () => {\n        setIsCheckout(true)\n    }\n\n    //error handling shoulb be implemented\n    const submitOrderHandler = async (userData) => {\n        setIsSubmitting(true)\n        await fetch('https://food-order-38f3a-default-rtdb.firebaseio.com/orders.json', {\n            method: 'POST',\n            body: JSON.stringify({\n                user: userData,\n                oderedItems: cartCtx.items\n            })\n        })\n        setIsSubmitting(false)\n        setDidSubmit(true)\n        cartCtx.clearCart()\n    }\n\n    const cartItems =\n        <ul className={classes['cart-items']}>{cartCtx.items.map(\n            (item) =>\n                <CartItem\n                    key={item.id}\n                    name={item.name}\n                    amount={item.amount}\n                    price={item.price}\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                    onAdd={cartItemAddHandler.bind(null, item)}\n                />\n        )}</ul>\n\n    const modalActions = (\n        <div className={classes.actions}>\n            <button onClick={props.onClose} className={classes['button--alt']}>\n                Close\n            </button>\n            {hasItems && <button className={classes.button} onClick={orderHandler} >\n                Order\n            </button>}\n        </div>\n    )\n\n    const cartModalContent = (\n        <React.Fragment>\n            {cartItems}\n            <div className={classes.total}>\n                <span>Total: </span>\n                <span>{totalAmount}</span>\n            </div>\n            {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\n            {!isCheckout && modalActions}\n        </React.Fragment>\n    )\n\n    const isSubmittingModalContent = <p>Sending order data...</p>\n\n    const didSubmitModalContent = <React.Fragment>\n        <p>Successfully sent the order!</p>\n        <div className={classes.actions}>\n            <button onClick={props.onClose} className={classes.button}>\n                Close\n            </button>\n        </div>\n    </React.Fragment>\n\n    return (\n        <Modal onClose={props.onClose}>\n            {!isSubmitting && !didSubmit && cartModalContent}\n            {isSubmitting && isSubmittingModalContent}\n            {!isSubmitting && didSubmit && didSubmitModalContent}\n        </Modal>\n    )\n}\n\nexport default Cart\n","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Header/Header.js",["118","119"],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealsSummary/MealsSummary.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/AvailableMeals/AvailableMeals.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/Button/Button.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartItem/CartItem.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Layout/HeaderCart/HeaderCartButton.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/Checkout/Checkout.js",["120"],"import React, { useRef, useState } from 'react'\nimport classes from './Checkout.module.css';\n\nconst isEmpty = value => value.trim() === ''\nconst isFiveChars = value => value.trim().length == 5\n\nconst Checkout = (props) => {\n\n    const [formInputsValidity, setformInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    })\n\n    const nameInputRef = useRef()\n    const streetInputRef = useRef()\n    const postalCodeInputRef = useRef()\n    const cityInputRef = useRef()\n\n    const confirmHandler = (event) => {\n        event.preventDefault();\n\n        const enteredName = nameInputRef.current.value\n        const enteredStreet = streetInputRef.current.value\n        const enteredPostalCode = postalCodeInputRef.current.value\n        const enteredCity = cityInputRef.current.value\n\n        const enteredNameIsValid = !isEmpty(enteredName)\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\n        const enteredCityIsValid =  !isEmpty(enteredCity)\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\n\n        setformInputsValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            postalCode: enteredPostalCodeIsValid,\n            city: enteredCityIsValid\n        })\n\n        const formIsValid =\n            enteredNameIsValid &&\n            enteredStreetIsValid &&\n            enteredPostalCodeIsValid &&\n            enteredCityIsValid\n\n        if (!formIsValid) {\n            return\n        }\n\n\n        props.onConfirm({\n            name: enteredName,\n            street: enteredStreet,\n            postalCode: enteredPostalCode,\n            city: enteredCity\n        })\n    };\n\n    const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid\n        }`\n    const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid\n        }`\n    const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid\n        }`\n    const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid\n        }`\n\n    return (\n        <form className={classes.form} onSubmit={confirmHandler}>\n            <div className={nameControlClasses}>\n                <label htmlFor='name'>Your Name</label>\n                <input ref={nameInputRef} type='text' id='name' />\n                {!formInputsValidity.name && <p>Please enter valid name!</p>}\n            </div>\n            <div className={streetControlClasses}>\n                <label htmlFor='street'>Street</label>\n                <input ref={streetInputRef} type='text' id='street' />\n                {!formInputsValidity.street && <p>Please enter valid street!</p>}\n            </div>\n            <div className={postalCodeControlClasses}>\n                <label htmlFor='postal'>Postal Code</label>\n                <input ref={postalCodeInputRef} type='number' id='postal' />\n                {!formInputsValidity.postalCode && <p>Please enter valid postal code (5)!</p>}\n            </div>\n            <div className={cityControlClasses}>\n                <label htmlFor='city'>City</label>\n                <input ref={cityInputRef} type='text' id='city' />\n                {!formInputsValidity.city && <p>Please enter valid city!</p>}\n            </div>\n            <div className={classes.actions}>\n                <button type='button' onClick={props.onCancel}>\n                    Cancel\n                </button>\n                <button className={classes.submit}>Confirm</button>\n            </div>\n        </form>\n    );\n};\n\nexport default Checkout;","/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Modal/Modal.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Carts/CartIcon.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Card/Card.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItem.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Meals/MealItem/MealItemForm/MealItemForm.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/UI/Input/Item-Input.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/Proflie.js",[],"/Users/mirzoulugbek/Desktop/ReaactMeals/src/components/ForgotPassword.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":39,"nodeType":"127","messageId":"128","endLine":1,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"129","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":24},{"ruleId":"125","severity":1,"message":"130","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":16},{"ruleId":"125","severity":1,"message":"131","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":11},{"ruleId":"125","severity":1,"message":"132","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":19},{"ruleId":"125","severity":1,"message":"131","line":295,"column":9,"nodeType":"127","messageId":"128","endLine":295,"endColumn":12},{"ruleId":"125","severity":1,"message":"132","line":305,"column":10,"nodeType":"127","messageId":"128","endLine":305,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":1,"column":39,"nodeType":"127","messageId":"128","endLine":1,"endColumn":48},{"ruleId":"125","severity":1,"message":"133","line":18,"column":12,"nodeType":"127","messageId":"128","endLine":18,"endColumn":22},{"ruleId":"125","severity":1,"message":"134","line":18,"column":24,"nodeType":"127","messageId":"128","endLine":18,"endColumn":37},{"ruleId":"125","severity":1,"message":"135","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"136","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":5,"column":50,"nodeType":"139","messageId":"140","endLine":5,"endColumn":52},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'Copyright' is defined but never used.","'isLoggedin' is assigned a value but never used.","'setIsLoggedin' is assigned a value but never used.","'mealsImage' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]